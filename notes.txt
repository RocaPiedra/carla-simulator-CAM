obtaining sensor data through carla:
the defined sensor through sensor=world.spawn_actor(...) can call a method called listen like this:
sensor.listen(save_image_method)
the save_image_method must receive an input variable image that can be used through np.frombuffer:
data = np.frombuffer(image, dtype)
that data is processed to obtain a surface for pygame rendering
then it is rendered.

We could get that data and feed it directly to other methods.

Next step: jun 18
How the menu class can display the data obtained from the sensors and from inference

july 5:
avoid having gpu out of memory error
option:
select window:
if window belongs to cam windows: to choose the model and cam method for selected window.

if window belongs to camera window: select that window as input for the cam method. DONE (July 7)

Filter interesting classes! at least for Coco dataset

July 7:
Solve the bug that keeps showing the cam image when the system is not paused (image blinks)

July 8: 
VGG implemented, YOLO in process
change of idea for comparison, if we have two models and two cams loaded, it will overload the GPU
Instead, add an option to select comparison model while the simulation is paused,clear the cam object and perform inference.
Done
WHY MODEL SELECTED DOES NOT UPDATE THE CAM METHOD FOR THE NEW MODEL (SOLVED)

July 13:
implement the capture of cam images to store in memory (not important)

Review July 26:
Score CAM breaks the execution due to GPU memory getting filled and it is too slow for CPU

July 26:
Something makes the output different between cam and inference outside
when getting top 5 the error must be within the code (not that important)
Remember it is possible to obtain cam for target class, addded to surfact to cam in roc functions (maybe check taxi)
Check the output of ClassifierOutputCategory, not sure what is happening there
ActivationAndGrads just return the inference result.
Currently I'm extracting the inference results (all) and getting max score, maybe change to returning whatever is using the CAM

August 27:
Current model classification from the cam method always throws very low score results and overall bad predictions.
This could be caused by a bad input image for the cam method, verify. Try to pass the class from normal inference if problem is not solved to obtain the saliency mask for the desired class.

USE THE FILTERED MODE OR NOT DEPENDING OF INPUT ONCE IT IS TESTED AND WORKING